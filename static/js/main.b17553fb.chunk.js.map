{"version":3,"sources":["components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","api/api.ts","api/posts.ts","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","selectedPostId","onSelectPost","className","map","post","userId","title","id","type","onClick","NewCommentForm","onAddComment","useState","commentName","setCommentName","commentEmail","setCommentEmail","commentBody","setCommentBody","newComment","postId","name","email","body","onSubmit","event","preventDefault","placeholder","value","onChange","target","BASE_URL","getUserPosts","url","fetch","then","response","json","PostDetails","showComments","setShowComments","postDetails","setPostDetails","comments","setComments","loadPostDetails","a","loadedPostDetails","loadComments","loadedComments","useEffect","comment","commentId","filter","length","state","App","setPosts","selectedUserId","setSelectedUserId","setSelectedPostId","loadPosts","loadedPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b17553fb.chunk.js","sourcesContent":["import { Post } from '../../react-app-env';\nimport './PostsList.scss';\n\ninterface Props {\n  posts: Post[];\n  selectedPostId: number;\n  onSelectPost: (postId: number) => void;\n}\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectedPostId,\n  onSelectPost,\n}) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\" data-cy=\"postDetails\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                {`[User #${post.userId}]: `}\n              </b>\n              {post.title}\n            </div>\n\n            {post.id === selectedPostId\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => onSelectPost(0)}\n                >\n                  Close\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => {\n                    onSelectPost(post.id);\n                  }}\n                >\n                  Open\n                </button>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { Comment } from '../../react-app-env';\n\ninterface Props {\n  id: number;\n  selectedPostId: number;\n  onAddComment: (newComment: Comment) => void;\n}\n\nexport const NewCommentForm: React.FC<Props> = ({\n  id,\n  selectedPostId,\n  onAddComment,\n}) => {\n  const [commentName, setCommentName] = useState('');\n  const [commentEmail, setCommentEmail] = useState('');\n  const [commentBody, setCommentBody] = useState('');\n\n  const newComment = {\n    id,\n    postId: selectedPostId,\n    name: commentName,\n    email: commentEmail,\n    body: commentBody,\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n\n        onAddComment(newComment);\n\n        setCommentName('');\n        setCommentEmail('');\n        setCommentBody('');\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={commentName}\n          onChange={(event) => setCommentName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={commentEmail}\n          onChange={(event) => setCommentEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={commentBody}\n          onChange={(event) => setCommentBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nexport function getUserPosts(userId: number) {\n  let url = `${BASE_URL}/posts?userId=${userId}`;\n\n  if (userId === 0) {\n    url = `${BASE_URL}/posts`;\n  }\n\n  return fetch(url)\n    .then(response => response.json());\n}\n\nexport function getPostDetails(postId: number) {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json());\n}\n\nexport function getPostComments(postId: number) {\n  return fetch(`${BASE_URL}/comments?postId=${postId}`)\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { Comment, Post } from '../../react-app-env';\nimport { getPostComments, getPostDetails } from '../../api/posts';\n\ninterface Props {\n  selectedPostId: number;\n}\n\nexport const PostDetails: React.FC<Props> = ({\n  selectedPostId,\n}) => {\n  const [showComments, setShowComments] = useState(true);\n  const [postDetails, setPostDetails] = useState<Post>();\n  const [comments, setComments] = useState<Comment[]>([]);\n\n  const loadPostDetails = async () => {\n    const loadedPostDetails = await getPostDetails(selectedPostId);\n\n    setPostDetails(loadedPostDetails);\n  };\n\n  const loadComments = async () => {\n    const loadedComments = await getPostComments(selectedPostId);\n\n    setComments(loadedComments);\n  };\n\n  useEffect(() => {\n    loadPostDetails();\n    loadComments();\n  }, [selectedPostId]);\n\n  const deleteCommentHandler = (commentId: number) => {\n    setComments(comments.filter(comment => comment.id !== commentId));\n  };\n\n  const addCommentHandler = (newComment: Comment) => {\n    setComments(state => [...state, newComment]);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>{`Post details: ${postDetails?.id}`}</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{postDetails?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\" data-cy=\"postDetails\">\n        {showComments\n          ? (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setShowComments(false)}\n            >\n              Hide comments\n            </button>\n          )\n          : (\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setShowComments(true)}\n            >\n              Show comments\n            </button>\n          )}\n\n        {showComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map((comment: Comment) => (\n              <li className=\"PostDetails__list-item\">\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteCommentHandler(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            id={comments.length > 0\n              ? (comments[comments.length - 1].id + 1)\n              : (1)}\n            selectedPostId={selectedPostId}\n            onAddComment={addCommentHandler}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Post } from './react-app-env';\nimport { getUserPosts } from './api/posts';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const loadPosts = async () => {\n    const loadedPosts = await getUserPosts(selectedUserId);\n\n    setPosts(loadedPosts);\n  };\n\n  useEffect(() => {\n    loadPosts();\n  }, [selectedUserId]);\n\n  const selectPostHandler = (postId: number) => {\n    setSelectedPostId(postId);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectedUserId}\n            onChange={(event) => setSelectedUserId(+event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            onSelectPost={selectPostHandler}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId !== 0 && (\n            <PostDetails\n              selectedPostId={selectedPostId}\n            />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}